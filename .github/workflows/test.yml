name: CI-Test

on:
  push:

jobs:
  no-file-new-name:
    runs-on: ubuntu-latest
    name: No file, new naming
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use local Dockerfile
        run: |
          sed -i 's^docker://gcr.io/gloot-automation/action-deploy-helm:latest^Dockerfile^g' action.yml
      - name: Deploy test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          application_name: no-file-new-name
          helm_version: 3
          helm_args: >
            --set ports[0].name=http
            --set ports[0].port=9028
            --set ports[0].protocol=TCP
            --set image.repository=nginxdemos/hello
            --set image.tag=latest
            --set image.pullPolicy=Always
            --set probe.httpGet.path=/
            --set probe.httpGet.port=80
            --set application.name=github-action-helm-test-no-file
            --set application.product=test
            --set application.team=github-action-test
            --set application.env=dev
      - name: Purge test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: ""
          helm_command: delete github-action-helm-test-no-file
  no-file-old-name:
    runs-on: ubuntu-latest
    name: No file, old naming
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use local Dockerfile
        run: |
          sed -i 's^docker://gcr.io/gloot-automation/action-deploy-helm:latest^Dockerfile^g' action.yml
      - name: Deploy test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: >
            --set ports[0].name=http
            --set ports[0].port=9028
            --set ports[0].protocol=TCP
            --set image.repository=nginxdemos/hello
            --set image.tag=latest
            --set image.pullPolicy=Always
            --set probe.httpGet.path=/
            --set probe.httpGet.port=80
            --set applicationName=github-action-helm-test-no-file-old
      - name: Purge test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: ""
          helm_command: delete github-action-helm-test-no-file-old
  single-file-old-name:
    runs-on: ubuntu-latest
    name: Single-file, old naming
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use local Dockerfile
        run: |
          sed -i 's^docker://gcr.io/gloot-automation/action-deploy-helm:latest^Dockerfile^g' action.yml
      - name: Deploy test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: "-f value-files/old-name.yaml --set image.tag=latest"
      - name: Purge test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: ""
          helm_command: "delete github-action-helm-test-single-file-old"
  single-file-new-name:
    runs-on: ubuntu-latest
    name: Single-file, new naming
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use local Dockerfile
        run: |
          sed -i 's^docker://gcr.io/gloot-automation/action-deploy-helm:latest^Dockerfile^g' action.yml
      - name: Deploy test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: "-f value-files/new-name.yaml --set image.tag=latest"
      - name: Purge test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: ""
          helm_command: "delete github-action-helm-test-single-file"
  multiple-files-new-name:
    runs-on: ubuntu-latest
    name: Multiple-files, new naming
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Use local Dockerfile
        run: |
          sed -i 's^docker://gcr.io/gloot-automation/action-deploy-helm:latest^Dockerfile^g' action.yml
      - name: Deploy test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: "-f value-files/new-name.yaml -f value-files/override-new-name.yaml --set image.tag=latest"
      - name: Purge test application
        uses: ./
        with:
          gcp_key: ${{ secrets.GCP_KEY }}
          helm_version: 3
          helm_args: ""
          helm_command: "delete github-action-helm-test-multiple-files"
